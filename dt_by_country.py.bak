from collections import defaultdict
import csv
import io

# API 요청 설정
url = 'https://api.cloudflare.com/client/v4/graphql'
headers = {
    'Content-Type': 'application/json',
    'X-Auth-Email': 'hakang@mz.co.kr',
    'X-Auth-Key': 'f6f652701a00dc80fc3c5e764adb1b84461e3'
}

# GraphQL 쿼리
query = """
{
  viewer {
    accounts(filter: { accountTag: $zoneTag }) {
      httpRequestsAdaptiveGroups(orderBy: [date_ASC]
        filter: $filter
        limit: 10000
      ) { 
        dimensions {
          date
          clientCountryName   
        }
        sum {
          edgeResponseBytes
        }
      }
    }
  }
}
"""

# 변수 설정
start_date = "2024-06-18"
end_date = "2024-07-17"
variables = {
    "zoneTag": "8a215d1828c45f48abeb1d966d35faa0",
    "filter": {
        "date_geq": start_date,
        "date_leq": end_date
    }
}

# API 요청
response = requests.post(url, json={'query': query, 'variables': variables}, headers=headers)

# 응답 확인
if response.status_code == 200:
    data = response.json()
    
    # 국가별 edgeResponseBytes 합산을 위한 딕셔너리 생성
    country_totals = defaultdict(int)
    
    # 데이터 처리
    for account in data['data']['viewer']['accounts']:
        for group in account['httpRequestsAdaptiveGroups']:
            country = group['dimensions']['clientCountryName']
            bytes = group['sum']['edgeResponseBytes']
            country_totals[country] += bytes
    
    # 모든 국가의 edgeResponseBytes 총합 계산
    total_bytes = sum(country_totals.values())
    
    # CSV 형식으로 결과 출력
    output = io.StringIO()
    writer = csv.writer(output)
    
    # 헤더 작성
    writer.writerow(['조회 시작일', '조회 종료일', '국가', 'edgeResponseBytes'])
    
    # 데이터 작성 (나라별 합산)
    for country, bytes in country_totals.items():
        writer.writerow([start_date, end_date, country, bytes])
    
    # 총합 행 추가
    writer.writerow([start_date, end_date, 'Total', total_bytes])
    
    # 결과 출력
    print(output.getvalue())
    
    # 총합 별도 출력
    print(f"\n모든 국가의 총 합계: {total_bytes}")
else:
    print(f"Error: {response.status_code}")
    print(response.text)import requests
from collections import defaultdict
import csv
import io

# API 요청 설정
url = 'https://api.cloudflare.com/client/v4/graphql'
headers = {
    'Content-Type': 'application/json',
    'X-Auth-Email': 'hakang@mz.co.kr',
    'X-Auth-Key': 'f6f652701a00dc80fc3c5e764adb1b84461e3'
}

# GraphQL 쿼리
query = """
{
  viewer {
    accounts(filter: { accountTag: $zoneTag }) {
      httpRequestsAdaptiveGroups(orderBy: [date_ASC]
        filter: $filter
        limit: 10000
      ) { 
        dimensions {
          date
          clientCountryName   
        }
        sum {
          edgeResponseBytes
        }
      }
    }
  }
}
"""

# 변수 설정
start_date = "2024-06-18"
end_date = "2024-07-17"
variables = {
    "zoneTag": "8a215d1828c45f48abeb1d966d35faa0",
    "filter": {
        "date_geq": start_date,
        "date_leq": end_date
    }
}

# API 요청
response = requests.post(url, json={'query': query, 'variables': variables}, headers=headers)

# 응답 확인
if response.status_code == 200:
    data = response.json()
    
    # 국가별 edgeResponseBytes 합산을 위한 딕셔너리 생성
    country_totals = defaultdict(int)
    
    # 데이터 처리
    for account in data['data']['viewer']['accounts']:
        for group in account['httpRequestsAdaptiveGroups']:
            country = group['dimensions']['clientCountryName']
            bytes = group['sum']['edgeResponseBytes']
            country_totals[country] += bytes
    
    # 모든 국가의 edgeResponseBytes 총합 계산
    total_bytes = sum(country_totals.values())
    
    # CSV 형식으로 결과 출력
    output = io.StringIO()
    writer = csv.writer(output)
    
    # 헤더 작성
    writer.writerow(['조회 시작일', '조회 종료일', '국가', 'edgeResponseBytes'])
    
    # 데이터 작성 (나라별 합산)
    for country, bytes in country_totals.items():
        writer.writerow([start_date, end_date, country, bytes])
    
    # 총합 행 추가
    writer.writerow([start_date, end_date, 'Total', total_bytes])
    
    # 결과 출력
    print(output.getvalue())
    
    # 총합 별도 출력
    print(f"\n모든 국가의 총 합계: {total_bytes}")
else:
    print(f"Error: {response.status_code}")
    print(response.text)
